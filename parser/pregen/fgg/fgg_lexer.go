// Code generated from parser/FGG.g4 by ANTLR 4.7.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 27, 197,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3,
	7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3,
	11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14,
	3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3,
	15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16,
	3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3,
	18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20,
	3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3,
	22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 23, 5, 23, 150, 10, 23, 3, 24,
	3, 24, 3, 25, 3, 25, 5, 25, 156, 10, 25, 3, 25, 3, 25, 3, 25, 7, 25, 161,
	10, 25, 12, 25, 14, 25, 164, 11, 25, 3, 26, 6, 26, 167, 10, 26, 13, 26,
	14, 26, 168, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 7, 27, 177, 10,
	27, 12, 27, 14, 27, 180, 11, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3,
	28, 3, 28, 3, 28, 3, 28, 7, 28, 191, 10, 28, 12, 28, 14, 28, 194, 11, 28,
	3, 28, 3, 28, 3, 178, 2, 29, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15,
	9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33,
	18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 2, 47, 2, 49, 24, 51, 25,
	53, 26, 55, 27, 3, 2, 5, 4, 2, 67, 92, 99, 124, 5, 2, 11, 12, 15, 15, 34,
	34, 4, 2, 12, 12, 15, 15, 2, 201, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2,
	7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2,
	2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2,
	2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2,
	2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3,
	2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 49,
	3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 3,
	57, 3, 2, 2, 2, 5, 59, 3, 2, 2, 2, 7, 61, 3, 2, 2, 2, 9, 63, 3, 2, 2, 2,
	11, 65, 3, 2, 2, 2, 13, 67, 3, 2, 2, 2, 15, 69, 3, 2, 2, 2, 17, 71, 3,
	2, 2, 2, 19, 73, 3, 2, 2, 2, 21, 75, 3, 2, 2, 2, 23, 81, 3, 2, 2, 2, 25,
	83, 3, 2, 2, 2, 27, 88, 3, 2, 2, 2, 29, 98, 3, 2, 2, 2, 31, 103, 3, 2,
	2, 2, 33, 111, 3, 2, 2, 2, 35, 118, 3, 2, 2, 2, 37, 125, 3, 2, 2, 2, 39,
	130, 3, 2, 2, 2, 41, 137, 3, 2, 2, 2, 43, 141, 3, 2, 2, 2, 45, 149, 3,
	2, 2, 2, 47, 151, 3, 2, 2, 2, 49, 155, 3, 2, 2, 2, 51, 166, 3, 2, 2, 2,
	53, 172, 3, 2, 2, 2, 55, 186, 3, 2, 2, 2, 57, 58, 7, 42, 2, 2, 58, 4, 3,
	2, 2, 2, 59, 60, 7, 43, 2, 2, 60, 6, 3, 2, 2, 2, 61, 62, 7, 46, 2, 2, 62,
	8, 3, 2, 2, 2, 63, 64, 7, 61, 2, 2, 64, 10, 3, 2, 2, 2, 65, 66, 7, 36,
	2, 2, 66, 12, 3, 2, 2, 2, 67, 68, 7, 125, 2, 2, 68, 14, 3, 2, 2, 2, 69,
	70, 7, 97, 2, 2, 70, 16, 3, 2, 2, 2, 71, 72, 7, 63, 2, 2, 72, 18, 3, 2,
	2, 2, 73, 74, 7, 48, 2, 2, 74, 20, 3, 2, 2, 2, 75, 76, 7, 36, 2, 2, 76,
	77, 7, 39, 2, 2, 77, 78, 7, 37, 2, 2, 78, 79, 7, 120, 2, 2, 79, 80, 7,
	36, 2, 2, 80, 22, 3, 2, 2, 2, 81, 82, 7, 127, 2, 2, 82, 24, 3, 2, 2, 2,
	83, 84, 7, 104, 2, 2, 84, 85, 7, 119, 2, 2, 85, 86, 7, 112, 2, 2, 86, 87,
	7, 101, 2, 2, 87, 26, 3, 2, 2, 2, 88, 89, 7, 107, 2, 2, 89, 90, 7, 112,
	2, 2, 90, 91, 7, 118, 2, 2, 91, 92, 7, 103, 2, 2, 92, 93, 7, 116, 2, 2,
	93, 94, 7, 104, 2, 2, 94, 95, 7, 99, 2, 2, 95, 96, 7, 101, 2, 2, 96, 97,
	7, 103, 2, 2, 97, 28, 3, 2, 2, 2, 98, 99, 7, 111, 2, 2, 99, 100, 7, 99,
	2, 2, 100, 101, 7, 107, 2, 2, 101, 102, 7, 112, 2, 2, 102, 30, 3, 2, 2,
	2, 103, 104, 7, 114, 2, 2, 104, 105, 7, 99, 2, 2, 105, 106, 7, 101, 2,
	2, 106, 107, 7, 109, 2, 2, 107, 108, 7, 99, 2, 2, 108, 109, 7, 105, 2,
	2, 109, 110, 7, 103, 2, 2, 110, 32, 3, 2, 2, 2, 111, 112, 7, 116, 2, 2,
	112, 113, 7, 103, 2, 2, 113, 114, 7, 118, 2, 2, 114, 115, 7, 119, 2, 2,
	115, 116, 7, 116, 2, 2, 116, 117, 7, 112, 2, 2, 117, 34, 3, 2, 2, 2, 118,
	119, 7, 117, 2, 2, 119, 120, 7, 118, 2, 2, 120, 121, 7, 116, 2, 2, 121,
	122, 7, 119, 2, 2, 122, 123, 7, 101, 2, 2, 123, 124, 7, 118, 2, 2, 124,
	36, 3, 2, 2, 2, 125, 126, 7, 118, 2, 2, 126, 127, 7, 123, 2, 2, 127, 128,
	7, 114, 2, 2, 128, 129, 7, 103, 2, 2, 129, 38, 3, 2, 2, 2, 130, 131, 7,
	107, 2, 2, 131, 132, 7, 111, 2, 2, 132, 133, 7, 114, 2, 2, 133, 134, 7,
	113, 2, 2, 134, 135, 7, 116, 2, 2, 135, 136, 7, 118, 2, 2, 136, 40, 3,
	2, 2, 2, 137, 138, 7, 104, 2, 2, 138, 139, 7, 111, 2, 2, 139, 140, 7, 118,
	2, 2, 140, 42, 3, 2, 2, 2, 141, 142, 7, 82, 2, 2, 142, 143, 7, 116, 2,
	2, 143, 144, 7, 107, 2, 2, 144, 145, 7, 112, 2, 2, 145, 146, 7, 118, 2,
	2, 146, 147, 7, 104, 2, 2, 147, 44, 3, 2, 2, 2, 148, 150, 9, 2, 2, 2, 149,
	148, 3, 2, 2, 2, 150, 46, 3, 2, 2, 2, 151, 152, 4, 50, 59, 2, 152, 48,
	3, 2, 2, 2, 153, 156, 5, 45, 23, 2, 154, 156, 7, 97, 2, 2, 155, 153, 3,
	2, 2, 2, 155, 154, 3, 2, 2, 2, 156, 162, 3, 2, 2, 2, 157, 161, 5, 45, 23,
	2, 158, 161, 7, 97, 2, 2, 159, 161, 5, 47, 24, 2, 160, 157, 3, 2, 2, 2,
	160, 158, 3, 2, 2, 2, 160, 159, 3, 2, 2, 2, 161, 164, 3, 2, 2, 2, 162,
	160, 3, 2, 2, 2, 162, 163, 3, 2, 2, 2, 163, 50, 3, 2, 2, 2, 164, 162, 3,
	2, 2, 2, 165, 167, 9, 3, 2, 2, 166, 165, 3, 2, 2, 2, 167, 168, 3, 2, 2,
	2, 168, 166, 3, 2, 2, 2, 168, 169, 3, 2, 2, 2, 169, 170, 3, 2, 2, 2, 170,
	171, 8, 26, 2, 2, 171, 52, 3, 2, 2, 2, 172, 173, 7, 49, 2, 2, 173, 174,
	7, 44, 2, 2, 174, 178, 3, 2, 2, 2, 175, 177, 11, 2, 2, 2, 176, 175, 3,
	2, 2, 2, 177, 180, 3, 2, 2, 2, 178, 179, 3, 2, 2, 2, 178, 176, 3, 2, 2,
	2, 179, 181, 3, 2, 2, 2, 180, 178, 3, 2, 2, 2, 181, 182, 7, 44, 2, 2, 182,
	183, 7, 49, 2, 2, 183, 184, 3, 2, 2, 2, 184, 185, 8, 27, 3, 2, 185, 54,
	3, 2, 2, 2, 186, 187, 7, 49, 2, 2, 187, 188, 7, 49, 2, 2, 188, 192, 3,
	2, 2, 2, 189, 191, 10, 4, 2, 2, 190, 189, 3, 2, 2, 2, 191, 194, 3, 2, 2,
	2, 192, 190, 3, 2, 2, 2, 192, 193, 3, 2, 2, 2, 193, 195, 3, 2, 2, 2, 194,
	192, 3, 2, 2, 2, 195, 196, 8, 28, 3, 2, 196, 56, 3, 2, 2, 2, 10, 2, 149,
	155, 160, 162, 168, 178, 192, 4, 8, 2, 2, 2, 3, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'('", "')'", "','", "';'", "'\"'", "'{'", "'_'", "'='", "'.'", "'\"%#v\"'",
	"'}'", "'func'", "'interface'", "'main'", "'package'", "'return'", "'struct'",
	"'type'", "'import'", "'fmt'", "'Printf'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "FUNC", "INTERFACE", "MAIN",
	"PACKAGE", "RETURN", "STRUCT", "TYPE", "IMPORT", "FMT", "PRINTF", "NAME",
	"WHITESPACE", "COMMENT", "LINE_COMMENT",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "FUNC", "INTERFACE", "MAIN", "PACKAGE", "RETURN", "STRUCT",
	"TYPE", "IMPORT", "FMT", "PRINTF", "LETTER", "DIGIT", "NAME", "WHITESPACE",
	"COMMENT", "LINE_COMMENT",
}

type FGGLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewFGGLexer(input antlr.CharStream) *FGGLexer {

	l := new(FGGLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "FGG.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FGGLexer tokens.
const (
	FGGLexerT__0         = 1
	FGGLexerT__1         = 2
	FGGLexerT__2         = 3
	FGGLexerT__3         = 4
	FGGLexerT__4         = 5
	FGGLexerT__5         = 6
	FGGLexerT__6         = 7
	FGGLexerT__7         = 8
	FGGLexerT__8         = 9
	FGGLexerT__9         = 10
	FGGLexerT__10        = 11
	FGGLexerFUNC         = 12
	FGGLexerINTERFACE    = 13
	FGGLexerMAIN         = 14
	FGGLexerPACKAGE      = 15
	FGGLexerRETURN       = 16
	FGGLexerSTRUCT       = 17
	FGGLexerTYPE         = 18
	FGGLexerIMPORT       = 19
	FGGLexerFMT          = 20
	FGGLexerPRINTF       = 21
	FGGLexerNAME         = 22
	FGGLexerWHITESPACE   = 23
	FGGLexerCOMMENT      = 24
	FGGLexerLINE_COMMENT = 25
)
