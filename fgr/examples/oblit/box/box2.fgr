package main;
type HasFggType interface { getFggType() FggType };
type Any interface { HasFggType };
type Box struct { a FggType; f Any };
func (x0 Box) getFggType() FggType { return Box[[x0.a]] };
type D struct { };
func (x0 D) getFggType() FggType { return D[[]] };
func (x0 D) bad(a FggType, x1 HasFggType) HasFggType { return D{}.bad(a, x1.(Any)).(Any) };
type A struct { };
func (x0 A) getFggType() FggType { return A[[]] };
func main() { _ = D{}.bad(A[[]], A{}).(Any) }