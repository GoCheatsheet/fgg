//$ go run github.com/rhu1/fgg -fgg -monomc=tmp/test/fg/julien/ifacebox-nomethparam.go -v fgg/examples/monom/julien/ifacebox-nomethparam.fgg
//$ go run github.com/rhu1/fgg -eval=-1 tmp/test/fg/julien/ifacebox-nomethparam.go

//$ go run github.com/rhu1/fgg -fgg -oblitc=tmp/test/fgr/monom/julien/ifacebox-nomethparam.fgr -v -oblit-eval=10 fgg/examples/monom/julien/ifacebox-nomethparam.fgg

package main;

type Any(type ) interface {};

type Func(type A Any(), B Any()) interface { apply(type )(a A) B };

type Box(type A Any()) interface {
     	      Make(type )() Box(A)
};

type ABox(type A Any()) struct{
};


func (a ABox(type A Any())) Make(type )() Box(A) {
	return ABox(A){}
};


/* BBox is unused */
type BBox(type A Any()) struct{
};


func (a BBox(type A Any())) Make(type )() Box(A) {
	return BBox(A){}
};



//type E(type ) struct {val D};  // FIXME: WF check
type E(type ) struct {val D()};


//type D(type ) struct {val E};  // FIXME: WF check
type D(type ) struct {val E()};

type Dummy(type ) struct{};
func (x Dummy(type )) doSomething(type )(y Box(E())) Box(E()) {
     	return y.Make()()
};


func (x Dummy(type )) makeBox(type A Any())() Box(A){
 return ABox(A){}
};

func main() { _ =
	Dummy(){}.doSomething()(Dummy(){}.makeBox(E())())
	// Dummy(){}.doSomething()(ABox(E()){})
}


